from sympy import mod_inverse, isprime
from math import isqrt

def factorize_n(n):
    """Factorize n into p and q."""
    for i in range(2, isqrt(n) + 1):
        if n % i == 0 and isprime(i):
            p = i
            q = n // i
            if isprime(q):
                return p, q
    raise ValueError("Failed to factorize n. Ensure n is a product of two primes.")

def rsa_decrypt(ciphertext, n, e):
    """Decrypt RSA ciphertext given n, e."""
    # Step 1: Factorize n to get p and q
    p, q = factorize_n(n)

    # Step 2: Compute phi(n)
    phi_n = (p - 1) * (q - 1)

    # Step 3: Compute the private key d
    d = mod_inverse(e, phi_n)

    # Step 4: Decrypt ciphertext
    plaintext = [pow(c, d, n) for c in ciphertext]

    return plaintext

# Given parameters
e = 7
n = 524357
ciphertext = [139986, 145697, 197229, 465230, 391098, 278252, 197229, 317115, 465230, 513217, 285941, 38287, 145697, 197229, 345398, 513217, 465230, 260043, 285941, 513217, 14960, 213315, 197229, 82525, 265974, 396661, 285941, 197229, 278252, 38287, 513217, 139944, 285941, 26770, 37756, 197229, 26770, 345398, 465230, 37756, 197229, 144595, 26770, 197229, 513217, 144595, 145552, 396661, 37756, 197229, 133784, 145697, 278252, 285941, 513217, 197229, 37756, 396661, 285941, 197229, 391098, 38287, 148799, 345398, 434094, 82525, 197229, 495641, 465230, 148799, 285941, 37756, 144595, 148799, 285941, 26770, 197229, 37756, 396661, 285941, 197229, 215248, 513217, 342500, 231482, 38287, 334938, 342500, 206007, 197229, 144595, 26770, 197229, 513217, 144595, 145552, 396661, 37756, 197229, 133784, 145697, 278252, 285941, 513217, 197229, 226600, 465230, 133784, 513217, 197229, 145697, 465230, 26770, 285941, 434094, 197229, 52022, 285941, 197229, 148799, 38287, 226600, 197229, 465230, 103367, 37756, 285941, 145697, 197229, 278252, 144595, 26770, 513217, 285941, 145552, 38287, 513217, 278252, 197229, 26770, 465230, 148799, 285941, 37756, 396661, 144595, 145697, 145552, 197229, 37756, 396661, 38287, 37756, 197229, 26770, 285941, 285941, 148799, 26770, 197229, 465230, 14960, 260043, 144595, 465230, 133784, 26770, 197229, 14960, 285941, 13908, 38287, 133784, 26770, 285941, 197229, 144595, 37756, 177906, 26770, 197229, 117115, 144595, 145697, 197229, 37756, 396661, 285941, 197229, 391098, 144595, 145552, 396661, 37756, 177906, 434094, 434094, 434094, 197229, 395435, 260043, 285941, 145697, 197229, 314860, 396661, 285941, 145697, 197229, 37756, 396661, 285941, 197229, 495641, 465230, 226600, 465230, 145697, 197229, 144595, 26770, 197229, 144595, 145697, 197229, 345398, 391098, 38287, 144595, 145697, 197229, 26770, 144595, 145552, 396661, 37756, 434094]

# Decrypt the ciphertext
plaintext = rsa_decrypt(ciphertext, n, e)

# Convert plaintext integers to characters (if ASCII encoding is used)
decoded_message = ''.join(chr(m) for m in plaintext)

print("Decrypted message:", decoded_message)
